sex = 'male';

analysis_onset = 'first_voiced_region'; %or 'first_sample'
frame_length = 40; %[ms]
timestep = 10; %[ms]
min_duration_of_voiced_regions = 30; %[ms]


if strcmpi(sex,'male')
    F0MinMax = [50 250];
else
    F0MinMax = [120 400];
end

num_sessions_rec = length(session_starts);

Ys0 = cell(cs,1);
Ys = Ys0;
for i=1:num_sessions_rec-1
    Y_r{i} = y_r(session_starts(i):session_starts(i+1)-1);
    Y_ps{i} = y_ps(session_starts(i):session_starts(i+1)-1);
end
Y_r{length(session_starts)} = y_r(session_starts(end):end);
Y_ps{length(session_starts)} = y_ps(session_starts(end):end);

f0_time{i} = cell(num_sessions_rec,1);
f0_value{i} = cell(num_sessions_rec,1);
voiced_regions = cell(num_sessions_rec,1);

for i=1:num_sessions_rec
    [f0_time{i},f0_value{i}]=shrp(y_r_session{i},Fs,frame_length,timestep);
    
    voiced_regions{i} = [false; abs(diff(f0_value{i}))<max_pitch_change];
    
    l=0;
    for j=1:length(voiced_regions{i})
        if voiced_regions{i}(j) == true
            l = l+1;
            continue;
        else
            if l < min_duration_of_voiced_regions/timestep;
                voiced_regions{i}(j-l:j-1) = false;
            end
            l=0;
        end
    end
    if l < min_duration_of_voiced_regions/timestep, voiced_regions{i}(end-l+1:end) = false; end;
end

for i=1:num_sessions_rec
    if strcmpi(analysis_onset,'first_voiced_region')
        t_on(i) = find(voiced_regions{i},1);
    else
        t_on(i) = 1;
    end
    
    len(i) = length(voiced_regions{i}(t_on:end));
end

f0_sums = zeros(length(pitch_levels_cents)+1,min(len));
f0_counts = f0_sums;
for i=1:num_sessions_rec
    if pitch_level_sqs_cents(i)==0
        pos=length(pitch_levels_cents)+1;
    else
        pos = find(pitch_levels_cents(pitch_levels_cents == pitch_level_sqs_cents(i)),1);
    end
    
    for j=1:min(len)
        if voiced_regions{i}(t_on(i)-1+j)
            f0_sums(pos,j) = f0_sums(pos,j) + f0_value{i}(t_on(i)-1+j);
            f0_qsums(pos,j) = f0_qsums(pos,j) + f0_value{i}(t_on(i)-1+j).^2;
            f0_counts(pos,j) = f0_counts(pos,j) +1;
        end
    end
end

f0_means = f0_sums ./ f0_counts;
f0_vars = f0_sums.^2 ./ f0_counts - f0_means;


refs = repmat(f0_means(end,:),length(pitch_levels_cents));
pitches = 1200 * log2(f0_means(1:end-1,:)./refs);

pitches_percent_compensation = 